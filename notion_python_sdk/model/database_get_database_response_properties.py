# coding: utf-8

"""
    Notion API

    Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from notion_python_sdk import schemas  # noqa: F401


class DatabaseGetDatabaseResponseProperties(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def _1() -> typing.Type['DatabaseGetDatabaseResponseProperties1']:
                return DatabaseGetDatabaseResponseProperties1
        
            @staticmethod
            def in_stock() -> typing.Type['DatabaseGetDatabaseResponsePropertiesInStock']:
                return DatabaseGetDatabaseResponsePropertiesInStock
        
            @staticmethod
            def Price() -> typing.Type['DatabaseGetDatabaseResponsePropertiesPrice']:
                return DatabaseGetDatabaseResponsePropertiesPrice
        
            @staticmethod
            def Description() -> typing.Type['DatabaseGetDatabaseResponsePropertiesDescription']:
                return DatabaseGetDatabaseResponsePropertiesDescription
        
            @staticmethod
            def last_ordered() -> typing.Type['DatabaseGetDatabaseResponsePropertiesLastOrdered']:
                return DatabaseGetDatabaseResponsePropertiesLastOrdered
        
            @staticmethod
            def Meals() -> typing.Type['DatabaseGetDatabaseResponsePropertiesMeals']:
                return DatabaseGetDatabaseResponsePropertiesMeals
        
            @staticmethod
            def number_of_meals() -> typing.Type['DatabaseGetDatabaseResponsePropertiesNumberOfMeals']:
                return DatabaseGetDatabaseResponsePropertiesNumberOfMeals
        
            @staticmethod
            def store_availability() -> typing.Type['DatabaseGetDatabaseResponsePropertiesStoreAvailability']:
                return DatabaseGetDatabaseResponsePropertiesStoreAvailability
        
            @staticmethod
            def Photo() -> typing.Type['DatabaseGetDatabaseResponsePropertiesPhoto']:
                return DatabaseGetDatabaseResponsePropertiesPhoto
        
            @staticmethod
            def food_group() -> typing.Type['DatabaseGetDatabaseResponsePropertiesFoodGroup']:
                return DatabaseGetDatabaseResponsePropertiesFoodGroup
        
            @staticmethod
            def Name() -> typing.Type['DatabaseGetDatabaseResponsePropertiesName']:
                return DatabaseGetDatabaseResponsePropertiesName
            __annotations__ = {
                "+1": _1,
                "In stock": in_stock,
                "Price": Price,
                "Description": Description,
                "Last ordered": last_ordered,
                "Meals": Meals,
                "Number of meals": number_of_meals,
                "Store availability": store_availability,
                "Photo": Photo,
                "Food group": food_group,
                "Name": Name,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["+1"]) -> 'DatabaseGetDatabaseResponseProperties1': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["In stock"]) -> 'DatabaseGetDatabaseResponsePropertiesInStock': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Price"]) -> 'DatabaseGetDatabaseResponsePropertiesPrice': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Description"]) -> 'DatabaseGetDatabaseResponsePropertiesDescription': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Last ordered"]) -> 'DatabaseGetDatabaseResponsePropertiesLastOrdered': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Meals"]) -> 'DatabaseGetDatabaseResponsePropertiesMeals': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Number of meals"]) -> 'DatabaseGetDatabaseResponsePropertiesNumberOfMeals': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Store availability"]) -> 'DatabaseGetDatabaseResponsePropertiesStoreAvailability': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Photo"]) -> 'DatabaseGetDatabaseResponsePropertiesPhoto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Food group"]) -> 'DatabaseGetDatabaseResponsePropertiesFoodGroup': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Name"]) -> 'DatabaseGetDatabaseResponsePropertiesName': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["+1", "In stock", "Price", "Description", "Last ordered", "Meals", "Number of meals", "Store availability", "Photo", "Food group", "Name", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["+1"]) -> typing.Union['DatabaseGetDatabaseResponseProperties1', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["In stock"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesInStock', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Price"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesPrice', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Description"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesDescription', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Last ordered"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesLastOrdered', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Meals"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesMeals', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Number of meals"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesNumberOfMeals', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Store availability"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesStoreAvailability', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Photo"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesPhoto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Food group"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesFoodGroup', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Name"]) -> typing.Union['DatabaseGetDatabaseResponsePropertiesName', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["+1", "In stock", "Price", "Description", "Last ordered", "Meals", "Number of meals", "Store availability", "Photo", "Food group", "Name", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        Price: typing.Union['DatabaseGetDatabaseResponsePropertiesPrice', schemas.Unset] = schemas.unset,
        Description: typing.Union['DatabaseGetDatabaseResponsePropertiesDescription', schemas.Unset] = schemas.unset,
        Meals: typing.Union['DatabaseGetDatabaseResponsePropertiesMeals', schemas.Unset] = schemas.unset,
        Photo: typing.Union['DatabaseGetDatabaseResponsePropertiesPhoto', schemas.Unset] = schemas.unset,
        Name: typing.Union['DatabaseGetDatabaseResponsePropertiesName', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DatabaseGetDatabaseResponseProperties':
        return super().__new__(
            cls,
            *args,
            Price=Price,
            Description=Description,
            Meals=Meals,
            Photo=Photo,
            Name=Name,
            _configuration=_configuration,
            **kwargs,
        )

from notion_python_sdk.model.database_get_database_response_properties1 import DatabaseGetDatabaseResponseProperties1
from notion_python_sdk.model.database_get_database_response_properties_description import DatabaseGetDatabaseResponsePropertiesDescription
from notion_python_sdk.model.database_get_database_response_properties_food_group import DatabaseGetDatabaseResponsePropertiesFoodGroup
from notion_python_sdk.model.database_get_database_response_properties_in_stock import DatabaseGetDatabaseResponsePropertiesInStock
from notion_python_sdk.model.database_get_database_response_properties_last_ordered import DatabaseGetDatabaseResponsePropertiesLastOrdered
from notion_python_sdk.model.database_get_database_response_properties_meals import DatabaseGetDatabaseResponsePropertiesMeals
from notion_python_sdk.model.database_get_database_response_properties_name import DatabaseGetDatabaseResponsePropertiesName
from notion_python_sdk.model.database_get_database_response_properties_number_of_meals import DatabaseGetDatabaseResponsePropertiesNumberOfMeals
from notion_python_sdk.model.database_get_database_response_properties_photo import DatabaseGetDatabaseResponsePropertiesPhoto
from notion_python_sdk.model.database_get_database_response_properties_price import DatabaseGetDatabaseResponsePropertiesPrice
from notion_python_sdk.model.database_get_database_response_properties_store_availability import DatabaseGetDatabaseResponsePropertiesStoreAvailability
