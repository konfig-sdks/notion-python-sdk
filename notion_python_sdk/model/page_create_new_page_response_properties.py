# coding: utf-8

"""
    Notion API

    Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from notion_python_sdk import schemas  # noqa: F401


class PageCreateNewPageResponseProperties(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def store_availability() -> typing.Type['PageCreateNewPageResponsePropertiesStoreAvailability']:
                return PageCreateNewPageResponsePropertiesStoreAvailability
        
            @staticmethod
            def food_group() -> typing.Type['PageCreateNewPageResponsePropertiesFoodGroup']:
                return PageCreateNewPageResponsePropertiesFoodGroup
        
            @staticmethod
            def Price() -> typing.Type['PageCreateNewPageResponsePropertiesPrice']:
                return PageCreateNewPageResponsePropertiesPrice
        
            @staticmethod
            def responsible_person() -> typing.Type['PageCreateNewPageResponsePropertiesResponsiblePerson']:
                return PageCreateNewPageResponsePropertiesResponsiblePerson
        
            @staticmethod
            def last_ordered() -> typing.Type['PageCreateNewPageResponsePropertiesLastOrdered']:
                return PageCreateNewPageResponsePropertiesLastOrdered
        
            @staticmethod
            def cost_of_next_trip() -> typing.Type['PageCreateNewPageResponsePropertiesCostOfNextTrip']:
                return PageCreateNewPageResponsePropertiesCostOfNextTrip
        
            @staticmethod
            def Recipes() -> typing.Type['PageCreateNewPageResponsePropertiesRecipes']:
                return PageCreateNewPageResponsePropertiesRecipes
        
            @staticmethod
            def Description() -> typing.Type['PageCreateNewPageResponsePropertiesDescription']:
                return PageCreateNewPageResponsePropertiesDescription
        
            @staticmethod
            def in_stock() -> typing.Type['PageCreateNewPageResponsePropertiesInStock']:
                return PageCreateNewPageResponsePropertiesInStock
        
            @staticmethod
            def number_of_meals() -> typing.Type['PageCreateNewPageResponsePropertiesNumberOfMeals']:
                return PageCreateNewPageResponsePropertiesNumberOfMeals
        
            @staticmethod
            def Photo() -> typing.Type['PageCreateNewPageResponsePropertiesPhoto']:
                return PageCreateNewPageResponsePropertiesPhoto
        
            @staticmethod
            def Name() -> typing.Type['PageCreateNewPageResponsePropertiesName']:
                return PageCreateNewPageResponsePropertiesName
            __annotations__ = {
                "Store availability": store_availability,
                "Food group": food_group,
                "Price": Price,
                "Responsible Person": responsible_person,
                "Last ordered": last_ordered,
                "Cost of next trip": cost_of_next_trip,
                "Recipes": Recipes,
                "Description": Description,
                "In stock": in_stock,
                "Number of meals": number_of_meals,
                "Photo": Photo,
                "Name": Name,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Store availability"]) -> 'PageCreateNewPageResponsePropertiesStoreAvailability': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Food group"]) -> 'PageCreateNewPageResponsePropertiesFoodGroup': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Price"]) -> 'PageCreateNewPageResponsePropertiesPrice': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Responsible Person"]) -> 'PageCreateNewPageResponsePropertiesResponsiblePerson': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Last ordered"]) -> 'PageCreateNewPageResponsePropertiesLastOrdered': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Cost of next trip"]) -> 'PageCreateNewPageResponsePropertiesCostOfNextTrip': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Recipes"]) -> 'PageCreateNewPageResponsePropertiesRecipes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Description"]) -> 'PageCreateNewPageResponsePropertiesDescription': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["In stock"]) -> 'PageCreateNewPageResponsePropertiesInStock': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Number of meals"]) -> 'PageCreateNewPageResponsePropertiesNumberOfMeals': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Photo"]) -> 'PageCreateNewPageResponsePropertiesPhoto': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Name"]) -> 'PageCreateNewPageResponsePropertiesName': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Store availability", "Food group", "Price", "Responsible Person", "Last ordered", "Cost of next trip", "Recipes", "Description", "In stock", "Number of meals", "Photo", "Name", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Store availability"]) -> typing.Union['PageCreateNewPageResponsePropertiesStoreAvailability', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Food group"]) -> typing.Union['PageCreateNewPageResponsePropertiesFoodGroup', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Price"]) -> typing.Union['PageCreateNewPageResponsePropertiesPrice', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Responsible Person"]) -> typing.Union['PageCreateNewPageResponsePropertiesResponsiblePerson', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Last ordered"]) -> typing.Union['PageCreateNewPageResponsePropertiesLastOrdered', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Cost of next trip"]) -> typing.Union['PageCreateNewPageResponsePropertiesCostOfNextTrip', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Recipes"]) -> typing.Union['PageCreateNewPageResponsePropertiesRecipes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Description"]) -> typing.Union['PageCreateNewPageResponsePropertiesDescription', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["In stock"]) -> typing.Union['PageCreateNewPageResponsePropertiesInStock', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Number of meals"]) -> typing.Union['PageCreateNewPageResponsePropertiesNumberOfMeals', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Photo"]) -> typing.Union['PageCreateNewPageResponsePropertiesPhoto', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Name"]) -> typing.Union['PageCreateNewPageResponsePropertiesName', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Store availability", "Food group", "Price", "Responsible Person", "Last ordered", "Cost of next trip", "Recipes", "Description", "In stock", "Number of meals", "Photo", "Name", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        Price: typing.Union['PageCreateNewPageResponsePropertiesPrice', schemas.Unset] = schemas.unset,
        Recipes: typing.Union['PageCreateNewPageResponsePropertiesRecipes', schemas.Unset] = schemas.unset,
        Description: typing.Union['PageCreateNewPageResponsePropertiesDescription', schemas.Unset] = schemas.unset,
        Photo: typing.Union['PageCreateNewPageResponsePropertiesPhoto', schemas.Unset] = schemas.unset,
        Name: typing.Union['PageCreateNewPageResponsePropertiesName', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PageCreateNewPageResponseProperties':
        return super().__new__(
            cls,
            *args,
            Price=Price,
            Recipes=Recipes,
            Description=Description,
            Photo=Photo,
            Name=Name,
            _configuration=_configuration,
            **kwargs,
        )

from notion_python_sdk.model.page_create_new_page_response_properties_cost_of_next_trip import PageCreateNewPageResponsePropertiesCostOfNextTrip
from notion_python_sdk.model.page_create_new_page_response_properties_description import PageCreateNewPageResponsePropertiesDescription
from notion_python_sdk.model.page_create_new_page_response_properties_food_group import PageCreateNewPageResponsePropertiesFoodGroup
from notion_python_sdk.model.page_create_new_page_response_properties_in_stock import PageCreateNewPageResponsePropertiesInStock
from notion_python_sdk.model.page_create_new_page_response_properties_last_ordered import PageCreateNewPageResponsePropertiesLastOrdered
from notion_python_sdk.model.page_create_new_page_response_properties_name import PageCreateNewPageResponsePropertiesName
from notion_python_sdk.model.page_create_new_page_response_properties_number_of_meals import PageCreateNewPageResponsePropertiesNumberOfMeals
from notion_python_sdk.model.page_create_new_page_response_properties_photo import PageCreateNewPageResponsePropertiesPhoto
from notion_python_sdk.model.page_create_new_page_response_properties_price import PageCreateNewPageResponsePropertiesPrice
from notion_python_sdk.model.page_create_new_page_response_properties_recipes import PageCreateNewPageResponsePropertiesRecipes
from notion_python_sdk.model.page_create_new_page_response_properties_responsible_person import PageCreateNewPageResponsePropertiesResponsiblePerson
from notion_python_sdk.model.page_create_new_page_response_properties_store_availability import PageCreateNewPageResponsePropertiesStoreAvailability
