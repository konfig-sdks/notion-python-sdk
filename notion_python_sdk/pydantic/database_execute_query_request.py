# coding: utf-8

"""
    Notion API

    Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from notion_python_sdk.pydantic.database_execute_query_request_sorts import DatabaseExecuteQueryRequestSorts

class DatabaseExecuteQueryRequest(BaseModel):
    # When supplied, limits which pages are returned based on the [filter conditions](ref:post-database-query-filter).
    filter: typing.Optional[str] = Field(None, alias='filter')

    sorts: typing.Optional[DatabaseExecuteQueryRequestSorts] = Field(None, alias='sorts')

    # When supplied, returns a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results.
    start_cursor: typing.Optional[str] = Field(None, alias='start_cursor')

    # The number of items from the full list desired in the response. Maximum: 100
    page_size: typing.Optional[int] = Field(None, alias='page_size')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
