# coding: utf-8

"""
    Notion API

    Notion is a new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.

    The version of the OpenAPI document: 1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from notion_python_sdk.pydantic.search_by_title_request_filter import SearchByTitleRequestFilter
from notion_python_sdk.pydantic.search_by_title_request_sort import SearchByTitleRequestSort

class SearchByTitleRequest(BaseModel):
    # The text that the API compares page and database titles against.
    query: typing.Optional[str] = Field(None, alias='query')

    sort: typing.Optional[SearchByTitleRequestSort] = Field(None, alias='sort')

    filter: typing.Optional[SearchByTitleRequestFilter] = Field(None, alias='filter')

    # A `cursor` value returned in a previous response that If supplied, limits the response to results starting after the `cursor`. If not supplied, then the first page of results is returned. Refer to [pagination](https://developers.notion.com/reference/intro#pagination) for more details.
    start_cursor: typing.Optional[str] = Field(None, alias='start_cursor')

    # The number of items from the full list to include in the response. Maximum: `100`.
    page_size: typing.Optional[int] = Field(None, alias='page_size')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
